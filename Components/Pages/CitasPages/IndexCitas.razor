@page "/Citas/Index"
@using ProyectoFinalAp1.Services
@inject CitasService citaService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Registro de Citas</PageTitle>

<div class="card shadow-lg">
    <div class="card-header bg-white text-center text-white py-3 rounded">
        <h3 class="font-weight-bold text-black">Registro de Citas</h3>
    </div>

    <div class="col-md-6 d-flex align-items-end">
        <div class="w-50 pe-2">
            <label for="Desde" class="form-label">Desde:</label>
            <InputDate class="form-control" @bind-Value="Desde" />
        </div>
        <div class="w-50 ps-2">
            <label for="Hasta" class="form-label">Hasta:</label>
            <InputDate class="form-control" @bind-Value="Hasta" />
        </div>
    </div>

    <div class="row mb-3 align-items-center px-3">
        <div class="col-md-3">
            <label for="Filtro" class="form-label">Filtrar por:</label>
            <select class="form-select" @bind="filtro">
                <option value="CitaId">CitaId</option>
                <option value="Nombre">Nombre</option>
                <option value="NombreMascota">Nombre de Mascota</option>
            </select>
        </div>
        <div class="col-md-6">
            <label for="ValorFiltro" class="form-label">B&uacute;squeda:</label>
            <div class="input-group">
                <InputText class="form-control" @bind-Value="valorFiltro" placeholder="Buscar" />
                <button class="btn btn-primary" type="button" @onclick="Buscar">
                    <i class="bi bi-search"></i> Buscar
                </button>
            </div>
        </div>
        <div class="col-md-3 text-end">
            <a href="/Citas/Create" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Crear
            </a>
        </div>
    </div>

    <table class="table table-bordered text-center">
        <thead>
            <tr>
                <th>CitaId</th>
                <th>Nombre</th>
                <th>Fecha</th>
                <th>Descripción</th>
                <th>Nombre Mascota</th>
                <th>Empleado</th>
                <th>Editar</th>
                <th>Cancelar</th>
            </tr>
        </thead>
        <tbody>
            @if (Listar != null && Listar.Count > 0)
            {
                @foreach (var cita in Listar)
                {
                    <tr>
                        <td>@cita.CitaId</td>
                        <td>@cita.Nombre</td>
                        <td>@cita.Fecha.ToString("dd-MM-yyyy")</td>
                        <td>@cita.Descripcion</td>
                        <td>@cita.NombreMascota</td>
                        <td>@cita.Empleado?.Nombre - @cita.Empleado?.Cargo</td>
                        <td>
                            
                            <!-- From Uiverse.io by aaronross1 -->
                            <button class="edit-button" @onclick="Edit">
                                <svg class="edit-svgIcon" viewBox="0 0 512 512">
                                    <path d="M410.3 231l11.3-11.3-33.9-33.9-62.1-62.1L291.7 89.8l-11.3 11.3-22.6 22.6L58.6 322.9c-10.4 10.4-18 23.3-22.2 37.4L1 480.7c-2.5 8.4-.2 17.5 6.1 23.7s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L387.7 253.7 410.3 231zM160 399.4l-9.1 22.7c-4 3.1-8.5 5.4-13.3 6.9L59.4 452l23-78.1c1.4-4.9 3.8-9.4 6.9-13.3l22.7-9.1v32c0 8.8 7.2 16 16 16h32zM362.7 18.7L348.3 33.2 325.7 55.8 314.3 67.1l33.9 33.9 62.1 62.1 33.9 33.9 11.3-11.3 22.6-22.6 14.5-14.5c25-25 25-65.5 0-90.5L453.3 18.7c-25-25-65.5-25-90.5 0zm-47.4 168l-144 144c-6.2 6.2-16.4 6.2-22.6 0s-6.2-16.4 0-22.6l144-144c6.2-6.2 16.4-6.2 22.6 0s6.2 16.4 0 22.6z"></path>
                                </svg>
                            </button>
                        </td>
                        <td>
                            <!-- From Uiverse.io by vinodjangid07 -->
                            <button class="button" @onclick="Delete">
                                <svg viewBox="0 0 448 512" class="svgIcon"><path d="M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z"></path></svg>
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="8">No se encontraron resultados</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="card-footer d-flex justify-content-between">
        <p>Conteo: @Listar.Count</p>
    </div>
</div>

@code {
    public List<Citas> Listar { get; set; } = new List<Citas>();
    public string filtro { get; set; } = "CitaId";
    public string valorFiltro { get; set; } = string.Empty;
    public DateTime? Desde { get; set; }
    public DateTime? Hasta { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CargarDatos();
    }

    public async Task Buscar()
    {
        var listaFiltrada = await citaService.Listar(p => true);

        if (Desde.HasValue && Hasta.HasValue)
        {
            listaFiltrada = listaFiltrada
                .Where(m => m.Fecha >= Desde.Value && m.Fecha <= Hasta.Value)
                .ToList();
        }

        if (!string.IsNullOrEmpty(valorFiltro))
        {
            if (filtro == "CitaId" && int.TryParse(valorFiltro, out int citaID))
            {
                listaFiltrada = listaFiltrada.Where(m => m.CitaId == citaID).ToList();
            }
            else if (filtro == "Nombre")
            {
                listaFiltrada = listaFiltrada
                    .Where(m => m.Nombre.ToLower().Contains(valorFiltro.ToLower()))
                    .ToList();
            }
            else if (filtro == "NombreMascota")
            {
                listaFiltrada = listaFiltrada
                    .Where(m => m.NombreMascota.ToLower().Contains(valorFiltro.ToLower()))
                    .ToList();
            }
        }

        Listar = listaFiltrada;
    }

    private async Task CargarDatos()
    {
        Listar = await citaService.Listar(s => true);
    }

    private void Delete()
    {
        navigationManager.NavigateTo("/Citas/Delete");
    }
    
    private void Edit()
    {
        navigationManager.NavigateTo("/Citas/Edit");
    }
}
