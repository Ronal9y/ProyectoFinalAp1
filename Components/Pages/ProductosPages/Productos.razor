@page "/Producto/IndexAdmin"
@using System.Linq.Expressions
@inject ProductoService productoservice
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Índice de Productos</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white">
            <h5 class="card-title mb-0">Listado de Productos</h5>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-4">
                    <label class="form-label"><strong>Buscar por:</strong></label>
                    <div class="input-group">
                        <select class="form-select" @bind="CriterioBusqueda">
                            <option value="Todos">Todos</option>
                            <option value="Id">ID</option>
                            <option value="Nombre">Nombre</option>
                            <option value="Categoria">Categoría</option>
                        </select>
                        @if (CriterioBusqueda == "Id")
                        {
                            <input type="number" class="form-control" @bind="IdBusqueda" placeholder="ID del producto" />
                        }
                        else if (CriterioBusqueda == "Nombre")
                        {
                            <input type="text" class="form-control" @bind="TextoBusqueda" placeholder="Nombre del producto" />
                        }
                        else if (CriterioBusqueda == "Categoria")
                        {
                            <input type="text" class="form-control" @bind="CategoriaBusqueda" placeholder="Tipo de categoría" />
                        }
                    </div>
                </div>
                <div class="col-md-4">
                    <label class="form-label"><strong>Filtrar por cantidad:</strong></label>
                    <div class="input-group">
                        <input type="number" class="form-control" @bind="CantidadMinima" placeholder="Mínimo" />
                        <span class="input-group-text">-</span>
                        <input type="number" class="form-control" @bind="CantidadMaxima" placeholder="Máximo" />
                    </div>
                </div>
                <div class="col-md-4 d-flex align-items-end">
                    <button class="btn btn-primary me-2" @onclick="BuscarProductos">
                        <i class="bi bi-search"></i> Buscar
                    </button>
                    <button class="btn btn-secondary" @onclick="LimpiarFiltros">
                        <i class="bi bi-arrow-counterclockwise"></i> Limpiar
                    </button>
                </div>
            </div>

            @if (!productos.Any())
            {
                <div class="alert alert-warning text-center">No se encontraron productos con los criterios especificados</div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr class="table-primary">
                                <th>ID</th>
                                <th>Nombre</th>
                                <th>Descripción</th>
                                <th>Tipo Categoría</th>
                                <th>Precio</th>
                                <th>Cantidad</th>
                                <th>Imagen</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var producto in productos)
                            {
                                <tr>
                                    <td>@producto.ProductoId</td>
                                    <td>@producto.Nombre</td>
                                    <td>@(producto.Descripcion?.Length > 30 ? producto.Descripcion.Substring(0, 30) + "..." : producto.Descripcion)</td>
                                    <td>@producto.TipoCategoria</td>
                                    <td>@producto.Precio.ToString("C")</td>
                                    <td>@producto.Stock</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(producto.ImagenURL))
                                        {
                                            <img src="@producto.ImagenURL" style="width: 50px; height: 50px;" class="img-thumbnail" />
                                        }
                                        else
                                        {
                                            <span class="text-muted">Sin imagen</span>
                                        }
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary me-1" @onclick="() => EditarProducto(producto.ProductoId)">
                                            <i class="bi bi-pencil"></i> Editar
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger" @onclick="() => ConfirmarEliminar(producto.ProductoId)">
                                            <i class="bi bi-trash"></i> Eliminar
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
        <div class="card-footer text-center">
            <button class="btn btn-success" @onclick="NuevoProducto">
                <i class="bi bi-plus-circle"></i> Agregar Nuevo Producto
            </button>
            <a class="btn btn-secondary" href="/Producto/Index">
                <i class="bi bi-house-door"></i> Volver al índice
            </a>
        </div>
    </div>
</div>

@code {

    private List<ProyectoFinalAp1.Models.Productos> productos = new List<ProyectoFinalAp1.Models.Productos>();
    private string CriterioBusqueda = "Todos";
    private int IdBusqueda;
    private string TextoBusqueda = string.Empty;
    private string CategoriaBusqueda = string.Empty;
    private int? CantidadMinima;
    private int? CantidadMaxima;

    protected override async Task OnInitializedAsync()
    {
        await CargarProductos();
    }

    private async Task CargarProductos()
    {
        productos = await productoservice.ListarProducto();
    }

    private async Task BuscarProductos()
    {
        if (CriterioBusqueda == "Id" && IdBusqueda > 0)
        {
            var producto = await productoservice.Buscar(IdBusqueda);
            productos = producto != null ? new List<ProyectoFinalAp1.Models.Productos> { producto } : new();
        }
        else if (CriterioBusqueda == "Nombre")
        {
            productos = await productoservice.ListarProducto(p => p.Nombre.Contains(TextoBusqueda));
        }
        else if (CriterioBusqueda == "Categoria")
        {
            productos = await productoservice.ListarProducto(p => p.TipoCategoria.Contains(CategoriaBusqueda));
        }
        else
        {
            productos = await productoservice.ListarProducto();
        }
    }

    private async Task LimpiarFiltros()
    {
        CriterioBusqueda = "Todos";
        IdBusqueda = 0;
        TextoBusqueda = string.Empty;
        CategoriaBusqueda = string.Empty;
        CantidadMinima = null;
        CantidadMaxima = null;
        await CargarProductos();
    }

    private void NuevoProducto()
    {
        navigationManager.NavigateTo("/Producto/ComprarProducto");
    }

    private void EditarProducto(int id)
    {
        navigationManager.NavigateTo($"/Producto/EditProducto/{id}");
    }

    private async Task ConfirmarEliminar(int id)
    {
        bool confirmado = await JSRuntime.InvokeAsync<bool>("confirm", "¿Está seguro que desea eliminar este producto?");
        if (confirmado)
        {
            await productoservice.Eliminar(id);
            await CargarProductos();
        }
    }
}