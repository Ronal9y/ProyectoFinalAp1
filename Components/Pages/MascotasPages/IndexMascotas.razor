@page "/Mascota/Index"
@using System.Linq.Expressions
@using ProyectoFinalAp1.Models
@inject MascotasService mascotasService
@inject CarritoMascotasService carritoMascotasService
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Mascotas Disponibles</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header bg-dark text-white py-2 rounded">
            <div class="d-flex justify-content-between align-items-center">
                <h3 class="font-weight-bold text-center w-100">Mascotas Disponibles</h3>
                <a href="/CarritoMascotas" class="btn btn-outline-light position-relative">
                    <i class="bi bi-cart-fill"></i>
                    @if (totalMascotas > 0)
                    {
                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                            @totalMascotas
                        </span>
                    }
                </a>
            </div>
        </div>

        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-4">
                    <label class="form-label"><strong>Filtrar por:</strong></label>
                    <select class="form-select" @bind="CriterioBusqueda">
                        <option value="Todos">Todos</option>
                        <option value="Id">ID</option>
                        <option value="Tipo">Tipo</option>
                        <option value="Raza">Raza</option>
                    </select>
                    <input type="text" class="form-control mt-2" @bind="TextoBusqueda" placeholder="Ingrese su búsqueda..." />
                </div>
                <div class="col-md-4 d-flex align-items-end">
                    <button class="btn btn-primary me-2" @onclick="BuscarMascotas">
                        <i class="bi bi-search"></i> Buscar
                    </button>
                    <button class="btn btn-secondary" @onclick="LimpiarFiltros">
                        <i class="bi bi-arrow-counterclockwise"></i> Limpiar
                    </button>
                </div>
            </div>

            @if (!mascotas.Any())
            {
                <div class="alert alert-warning text-center">No se encontraron mascotas con los criterios especificados</div>
            }
            else
            {
                <div class="row">
                    @foreach (var mascota in mascotas)
                    {
                        <div class="col-md-4 mb-4">
                            <div class="card h-100">
                                @if (!string.IsNullOrEmpty(mascota.ImageURL))
                                {
                                    <img src="@mascota.ImageURL" class="card-img-top" alt="Imagen de @mascota.Tipo" />
                                }
                                <div class="card-body">
                                    <h5 class="card-title">@mascota.Tipo</h5>
                                    <p class="text-muted"><strong>ID:</strong> @mascota.MascotaId</p>
                                    <p><strong>Raza:</strong> @mascota.Raza</p>
                                    <p><strong>Fecha Nacimiento:</strong> @mascota.FechaDeNacimiento.ToShortDateString()</p>
                                    <p><strong>Precio:</strong> @mascota.Precio.ToString("C")</p>
                                    <p><strong>Disponibles:</strong> @mascota.Cantidad</p>
                                    <div class="d-flex justify-content-between">
                                        <button class="btn btn-sm btn-outline-primary" @onclick="() => EditarMascota(mascota.MascotaId)">
                                            <i class="bi bi-pencil"></i> Editar
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger" @onclick="() => ConfirmarEliminar(mascota.MascotaId)">
                                            <i class="bi bi-trash"></i> Eliminar
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
        <div class="card-footer text-center">
            <button class="btn btn-success" @onclick="NuevaMascota">
                <i class="bi bi-plus-circle"></i> Nueva Mascota
            </button>
        </div>
    </div>
</div>

@code {
    private List<ProyectoFinalAp1.Models.Mascotas> mascotas = new List<ProyectoFinalAp1.Models.Mascotas>();   
    private string CriterioBusqueda = "Todos";
    private string TextoBusqueda = string.Empty;
    private int totalMascotas = 0;

    protected override async Task OnInitializedAsync()
    {
        await CargarMascotas();
        totalMascotas = await carritoMascotasService.ObtenerTotalMascotasEnCarritoAsync();
    }

    private async Task CargarMascotas()
    {
        mascotas = await mascotasService.ListarMascotas();
    }

    private async Task BuscarMascotas()
    {
        if (CriterioBusqueda == "Id" && int.TryParse(TextoBusqueda, out int id))
        {
            var mascota = await mascotasService.Buscar(id);
            mascotas = mascota != null ? new List<ProyectoFinalAp1.Models.Mascotas> { mascota } : new();
        }
        else if (CriterioBusqueda == "Tipo")
        {
            mascotas = await mascotasService.ListarMascotas(p => p.Tipo.Contains(TextoBusqueda));
        }
        else if (CriterioBusqueda == "Raza")
        {
            mascotas = await mascotasService.ListarMascotas(p => p.Raza.Contains(TextoBusqueda));
        }
        else
        {
            await CargarMascotas();
        }
    }

    private async Task LimpiarFiltros()
    {
        CriterioBusqueda = "Todos";
        TextoBusqueda = string.Empty;
        await CargarMascotas();
    }

    private void NuevaMascota()
    {
        navigationManager.NavigateTo("/Mascota/ComprarMascota");
    }

    private void EditarMascota(int id)
    {
        navigationManager.NavigateTo($"/Mascota/EditarMascota/{id}");
    }

    private async Task ConfirmarEliminar(int id)
    {
        bool confirmado = await JSRuntime.InvokeAsync<bool>("confirm", "¿Está seguro que desea eliminar esta mascota?");
        if (confirmado)
        {
            await mascotasService.Eliminar(id);
            await CargarMascotas();
        }
    }
}
