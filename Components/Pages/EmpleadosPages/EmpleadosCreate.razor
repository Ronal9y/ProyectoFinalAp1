@page "/Empleados/Create"
@using ProyectoFinalAp1.Services
@inject EmpleadoService empleadoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<EditForm Model="Empleado" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card-header bg-primary text-center text-white py-2 rounded">
        <h3 style="font-weight: bold;" class="font-weight-bold">Crear Empleado</h3>
    </div>

    <div class="card-body">


        @*Nombre*@
        <div class="mb-3">
            <label for="Nombre" class="form-label">Nombre:</label>
            <InputText @bind-Value="Empleado.Nombre" class="form-control" />
        </div>

        @*Apellidos*@
        <div class="mb-3">
            <label for="Apellidos" class="form-label">Apellidos:</label>
            <InputText @bind-Value="Empleado.Apellidos" class="form-control" />
        </div>

        @*Email*@
        <div class="mb-3">
            <label for="Email" class="form-label">Email:</label>
            <InputText @bind-Value="Empleado.Email" class="form-control" />
        </div>

        @*Cargo*@
        <div class="mb-3">
            <label for="Cargo" class="form-label">Cargo:</label>
            <InputText @bind-Value="Empleado.Cargo" class="form-control" />
        </div>

        @*Fecha de contratacion*@
        <div class="mb-3">
            <label for="Fecha" class="form-label">Fecha:</label>
            <InputDate @bind-Value="Empleado.FechaDeContratacion" class="form-control" />
        </div>

        @*Salario*@
        <div class="mb-3">
            <label for="Monto" class="form-label">Salario:</label>
            <InputNumber @bind-Value="Empleado.Salario" class="form-control" min="0" />
        </div>

    </div>

    <div class="card-footer d-flex justify-content-lg-center text-center">
        <div class="btn-group">
            <button type="button" class="btn btn-outline-primary ml-2" @onclick="Nuevo"><span class="bi bi-plus-circle"></span>Nuevo</button>
            <button type="button" class="btn btn-outline-success ml-2" @onclick="Guardar"><span class="bi bi-check-circle-fill"></span>Guardar</button>
            <button type="button" class="btn btn-outline-danger" @onclick="Retroceder"><span class="bi bi-arrow-bar-left"></span>Retroceder</button>

        </div>

    </div>

</EditForm>

@code {
    [Parameter]
    public int EmpleadoId { get; set; }
    public Empleados Empleado { get; set; } = new Empleados();
    public bool existe = false;

    public async Task Nuevo()
    {

        Empleado = new Empleados();
        existe = false;

    }

    public async Task Buscar()
    {
        existe = false;
        var encontrado = await empleadoService.Buscar(Empleado.EmpleadoId);
        if (encontrado != null)
        {
            Empleado = encontrado;
        }
        else
        {

            Nuevo();

        }
    }

    public async Task<bool> Validar()
    {
        var listaEmpleados = await empleadoService.Listar(m => m.Nombre.ToLower() == Empleado.Nombre.ToLower());
        existe = listaEmpleados.Any();
        return !existe;
    }


    public async Task Guardar()
    {
        if (Empleado.Salario < 0)
        {
            return;
        }

        if (!await Validar())
        {
            return;
        }

        var resultado = await empleadoService.Guardar(Empleado);
        if (resultado)
        {
            Nuevo();
            Retroceder();
        }
    }

    public async Task Retroceder()
    {
        navigationManager.NavigateTo("/Empleados/Index");
    }

    public async Task Eliminar()
    {
        var eliminado = await empleadoService.Eliminar(Empleado.EmpleadoId);
        Nuevo();
    }

}